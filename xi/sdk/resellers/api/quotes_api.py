# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import List, Optional
from typing_extensions import Annotated
from xi.sdk.resellers.models.quote_details_response import QuoteDetailsResponse
from xi.sdk.resellers.models.quote_search_response import QuoteSearchResponse
from xi.sdk.resellers.models.validate_quote_response import ValidateQuoteResponse

from xi.sdk.resellers.api_client import ApiClient, RequestSerialized
from xi.sdk.resellers.api_response import ApiResponse
from xi.sdk.resellers.rest import RESTResponseType


class QuotesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_quotessearch_v6(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_customer_contact: Annotated[str, Field(strict=True, max_length=64, description="Logged in Users email address contact.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        ingram_order_date_bt: Annotated[Optional[List[Annotated[str, Field(strict=True)]]], Field(description="Search with start and end date(only 2 entries allowed).")] = None,
        quote_number: Annotated[Optional[StrictStr], Field(description="Unique identifier generated by Ingram Micros CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.")] = None,
        special_bid_number: Annotated[Optional[StrictStr], Field(description="Special Pricing Bid Number, also referred to as a Dart Number by some vendors, is a unique identifier associated with vendor specific products and discounts.")] = None,
        end_user_contact: Annotated[Optional[StrictStr], Field(description="End User Name is the end customer name that is associated with a quote in Ingram Micros CRM.")] = None,
        sorting_order: Annotated[Optional[StrictStr], Field(description="Sort applies to the selected column (sortingColumnName) and may be specified in  Ascending (asc) or Descending (desc) order. The default sort is Descending (desc) - most recent first.")] = None,
        sort_by: Annotated[Optional[StrictStr], Field(description="Refers to the column selected to apply the sorting criteria.  The default column is dateCreated and will sort by the most recently created quote first with the following in descending order.  The default filter retrieves quotes created within the last 30 days. Filtering allows user to select a specific column to sort: quoteNumber, createdDate, lastModifiedDate and expiryDate.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of records (quotes) to display per page in the quote list.  The default is 25, but may be decreased using the filter .")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Page index or page number for the list of quotes being returned.")] = None,
        vendor_name: Annotated[Optional[StrictStr], Field(description="The name of the vendor.")] = None,
        quote_name: Annotated[Optional[StrictStr], Field(description="The quote name was given by the customer while creating quote.")] = None,
        status: Annotated[Optional[StrictStr], Field(description="The status of the quote.")] = None,
        quote_create_date_bt: Annotated[Optional[StrictStr], Field(description="Search with start and end date(only 2 entries allowed).")] = None,
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> QuoteSearchResponse:
        """Quote Search

        The Quote Search API, by default, will retrieve quotes modified or created within the last 30 days. Quotes older than 365 days are excluded by default. The date filters enable the retrieval of quotes older than 30 days and up to 365 days when using date range criteria. The Quote Search API enables the retrieval and filtering of relevant quote list key criteria data such as Quote Number, Special Bid Numbers, End User Name, Quote Status, and Date Ranges from Ingram Micros CRM system. Only Active quotes are avaiable through the API.  Draft and Closed quotes are excluded and are not accessable through the Quote List Search API.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_customer_contact: Logged in Users email address contact. (required)
        :type im_customer_contact: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param ingram_order_date_bt: Search with start and end date(only 2 entries allowed).
        :type ingram_order_date_bt: List[str]
        :param quote_number: Unique identifier generated by Ingram Micros CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.
        :type quote_number: str
        :param special_bid_number: Special Pricing Bid Number, also referred to as a Dart Number by some vendors, is a unique identifier associated with vendor specific products and discounts.
        :type special_bid_number: str
        :param end_user_contact: End User Name is the end customer name that is associated with a quote in Ingram Micros CRM.
        :type end_user_contact: str
        :param sorting_order: Sort applies to the selected column (sortingColumnName) and may be specified in  Ascending (asc) or Descending (desc) order. The default sort is Descending (desc) - most recent first.
        :type sorting_order: str
        :param sort_by: Refers to the column selected to apply the sorting criteria.  The default column is dateCreated and will sort by the most recently created quote first with the following in descending order.  The default filter retrieves quotes created within the last 30 days. Filtering allows user to select a specific column to sort: quoteNumber, createdDate, lastModifiedDate and expiryDate.
        :type sort_by: str
        :param page_size: Number of records (quotes) to display per page in the quote list.  The default is 25, but may be decreased using the filter .
        :type page_size: int
        :param page_number: Page index or page number for the list of quotes being returned.
        :type page_number: int
        :param vendor_name: The name of the vendor.
        :type vendor_name: str
        :param quote_name: The quote name was given by the customer while creating quote.
        :type quote_name: str
        :param status: The status of the quote.
        :type status: str
        :param quote_create_date_bt: Search with start and end date(only 2 entries allowed).
        :type quote_create_date_bt: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_quotessearch_v6_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_customer_contact=im_customer_contact,
            im_correlation_id=im_correlation_id,
            ingram_order_date_bt=ingram_order_date_bt,
            quote_number=quote_number,
            special_bid_number=special_bid_number,
            end_user_contact=end_user_contact,
            sorting_order=sorting_order,
            sort_by=sort_by,
            page_size=page_size,
            page_number=page_number,
            vendor_name=vendor_name,
            quote_name=quote_name,
            status=status,
            quote_create_date_bt=quote_create_date_bt,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "QuoteSearchResponse",
            '400': "ErrorResponse",
            '401': None,
            '404': "ErrorResponse",
            '500': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_quotessearch_v6_with_http_info(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_customer_contact: Annotated[str, Field(strict=True, max_length=64, description="Logged in Users email address contact.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        ingram_order_date_bt: Annotated[Optional[List[Annotated[str, Field(strict=True)]]], Field(description="Search with start and end date(only 2 entries allowed).")] = None,
        quote_number: Annotated[Optional[StrictStr], Field(description="Unique identifier generated by Ingram Micros CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.")] = None,
        special_bid_number: Annotated[Optional[StrictStr], Field(description="Special Pricing Bid Number, also referred to as a Dart Number by some vendors, is a unique identifier associated with vendor specific products and discounts.")] = None,
        end_user_contact: Annotated[Optional[StrictStr], Field(description="End User Name is the end customer name that is associated with a quote in Ingram Micros CRM.")] = None,
        sorting_order: Annotated[Optional[StrictStr], Field(description="Sort applies to the selected column (sortingColumnName) and may be specified in  Ascending (asc) or Descending (desc) order. The default sort is Descending (desc) - most recent first.")] = None,
        sort_by: Annotated[Optional[StrictStr], Field(description="Refers to the column selected to apply the sorting criteria.  The default column is dateCreated and will sort by the most recently created quote first with the following in descending order.  The default filter retrieves quotes created within the last 30 days. Filtering allows user to select a specific column to sort: quoteNumber, createdDate, lastModifiedDate and expiryDate.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of records (quotes) to display per page in the quote list.  The default is 25, but may be decreased using the filter .")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Page index or page number for the list of quotes being returned.")] = None,
        vendor_name: Annotated[Optional[StrictStr], Field(description="The name of the vendor.")] = None,
        quote_name: Annotated[Optional[StrictStr], Field(description="The quote name was given by the customer while creating quote.")] = None,
        status: Annotated[Optional[StrictStr], Field(description="The status of the quote.")] = None,
        quote_create_date_bt: Annotated[Optional[StrictStr], Field(description="Search with start and end date(only 2 entries allowed).")] = None,
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[QuoteSearchResponse]:
        """Quote Search

        The Quote Search API, by default, will retrieve quotes modified or created within the last 30 days. Quotes older than 365 days are excluded by default. The date filters enable the retrieval of quotes older than 30 days and up to 365 days when using date range criteria. The Quote Search API enables the retrieval and filtering of relevant quote list key criteria data such as Quote Number, Special Bid Numbers, End User Name, Quote Status, and Date Ranges from Ingram Micros CRM system. Only Active quotes are avaiable through the API.  Draft and Closed quotes are excluded and are not accessable through the Quote List Search API.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_customer_contact: Logged in Users email address contact. (required)
        :type im_customer_contact: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param ingram_order_date_bt: Search with start and end date(only 2 entries allowed).
        :type ingram_order_date_bt: List[str]
        :param quote_number: Unique identifier generated by Ingram Micros CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.
        :type quote_number: str
        :param special_bid_number: Special Pricing Bid Number, also referred to as a Dart Number by some vendors, is a unique identifier associated with vendor specific products and discounts.
        :type special_bid_number: str
        :param end_user_contact: End User Name is the end customer name that is associated with a quote in Ingram Micros CRM.
        :type end_user_contact: str
        :param sorting_order: Sort applies to the selected column (sortingColumnName) and may be specified in  Ascending (asc) or Descending (desc) order. The default sort is Descending (desc) - most recent first.
        :type sorting_order: str
        :param sort_by: Refers to the column selected to apply the sorting criteria.  The default column is dateCreated and will sort by the most recently created quote first with the following in descending order.  The default filter retrieves quotes created within the last 30 days. Filtering allows user to select a specific column to sort: quoteNumber, createdDate, lastModifiedDate and expiryDate.
        :type sort_by: str
        :param page_size: Number of records (quotes) to display per page in the quote list.  The default is 25, but may be decreased using the filter .
        :type page_size: int
        :param page_number: Page index or page number for the list of quotes being returned.
        :type page_number: int
        :param vendor_name: The name of the vendor.
        :type vendor_name: str
        :param quote_name: The quote name was given by the customer while creating quote.
        :type quote_name: str
        :param status: The status of the quote.
        :type status: str
        :param quote_create_date_bt: Search with start and end date(only 2 entries allowed).
        :type quote_create_date_bt: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_quotessearch_v6_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_customer_contact=im_customer_contact,
            im_correlation_id=im_correlation_id,
            ingram_order_date_bt=ingram_order_date_bt,
            quote_number=quote_number,
            special_bid_number=special_bid_number,
            end_user_contact=end_user_contact,
            sorting_order=sorting_order,
            sort_by=sort_by,
            page_size=page_size,
            page_number=page_number,
            vendor_name=vendor_name,
            quote_name=quote_name,
            status=status,
            quote_create_date_bt=quote_create_date_bt,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "QuoteSearchResponse",
            '400': "ErrorResponse",
            '401': None,
            '404': "ErrorResponse",
            '500': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_quotessearch_v6_without_preload_content(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_customer_contact: Annotated[str, Field(strict=True, max_length=64, description="Logged in Users email address contact.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        ingram_order_date_bt: Annotated[Optional[List[Annotated[str, Field(strict=True)]]], Field(description="Search with start and end date(only 2 entries allowed).")] = None,
        quote_number: Annotated[Optional[StrictStr], Field(description="Unique identifier generated by Ingram Micros CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.")] = None,
        special_bid_number: Annotated[Optional[StrictStr], Field(description="Special Pricing Bid Number, also referred to as a Dart Number by some vendors, is a unique identifier associated with vendor specific products and discounts.")] = None,
        end_user_contact: Annotated[Optional[StrictStr], Field(description="End User Name is the end customer name that is associated with a quote in Ingram Micros CRM.")] = None,
        sorting_order: Annotated[Optional[StrictStr], Field(description="Sort applies to the selected column (sortingColumnName) and may be specified in  Ascending (asc) or Descending (desc) order. The default sort is Descending (desc) - most recent first.")] = None,
        sort_by: Annotated[Optional[StrictStr], Field(description="Refers to the column selected to apply the sorting criteria.  The default column is dateCreated and will sort by the most recently created quote first with the following in descending order.  The default filter retrieves quotes created within the last 30 days. Filtering allows user to select a specific column to sort: quoteNumber, createdDate, lastModifiedDate and expiryDate.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Number of records (quotes) to display per page in the quote list.  The default is 25, but may be decreased using the filter .")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Page index or page number for the list of quotes being returned.")] = None,
        vendor_name: Annotated[Optional[StrictStr], Field(description="The name of the vendor.")] = None,
        quote_name: Annotated[Optional[StrictStr], Field(description="The quote name was given by the customer while creating quote.")] = None,
        status: Annotated[Optional[StrictStr], Field(description="The status of the quote.")] = None,
        quote_create_date_bt: Annotated[Optional[StrictStr], Field(description="Search with start and end date(only 2 entries allowed).")] = None,
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Quote Search

        The Quote Search API, by default, will retrieve quotes modified or created within the last 30 days. Quotes older than 365 days are excluded by default. The date filters enable the retrieval of quotes older than 30 days and up to 365 days when using date range criteria. The Quote Search API enables the retrieval and filtering of relevant quote list key criteria data such as Quote Number, Special Bid Numbers, End User Name, Quote Status, and Date Ranges from Ingram Micros CRM system. Only Active quotes are avaiable through the API.  Draft and Closed quotes are excluded and are not accessable through the Quote List Search API.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_customer_contact: Logged in Users email address contact. (required)
        :type im_customer_contact: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param ingram_order_date_bt: Search with start and end date(only 2 entries allowed).
        :type ingram_order_date_bt: List[str]
        :param quote_number: Unique identifier generated by Ingram Micros CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.
        :type quote_number: str
        :param special_bid_number: Special Pricing Bid Number, also referred to as a Dart Number by some vendors, is a unique identifier associated with vendor specific products and discounts.
        :type special_bid_number: str
        :param end_user_contact: End User Name is the end customer name that is associated with a quote in Ingram Micros CRM.
        :type end_user_contact: str
        :param sorting_order: Sort applies to the selected column (sortingColumnName) and may be specified in  Ascending (asc) or Descending (desc) order. The default sort is Descending (desc) - most recent first.
        :type sorting_order: str
        :param sort_by: Refers to the column selected to apply the sorting criteria.  The default column is dateCreated and will sort by the most recently created quote first with the following in descending order.  The default filter retrieves quotes created within the last 30 days. Filtering allows user to select a specific column to sort: quoteNumber, createdDate, lastModifiedDate and expiryDate.
        :type sort_by: str
        :param page_size: Number of records (quotes) to display per page in the quote list.  The default is 25, but may be decreased using the filter .
        :type page_size: int
        :param page_number: Page index or page number for the list of quotes being returned.
        :type page_number: int
        :param vendor_name: The name of the vendor.
        :type vendor_name: str
        :param quote_name: The quote name was given by the customer while creating quote.
        :type quote_name: str
        :param status: The status of the quote.
        :type status: str
        :param quote_create_date_bt: Search with start and end date(only 2 entries allowed).
        :type quote_create_date_bt: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_quotessearch_v6_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_customer_contact=im_customer_contact,
            im_correlation_id=im_correlation_id,
            ingram_order_date_bt=ingram_order_date_bt,
            quote_number=quote_number,
            special_bid_number=special_bid_number,
            end_user_contact=end_user_contact,
            sorting_order=sorting_order,
            sort_by=sort_by,
            page_size=page_size,
            page_number=page_number,
            vendor_name=vendor_name,
            quote_name=quote_name,
            status=status,
            quote_create_date_bt=quote_create_date_bt,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "QuoteSearchResponse",
            '400': "ErrorResponse",
            '401': None,
            '404': "ErrorResponse",
            '500': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_quotessearch_v6_serialize(
        self,
        im_customer_number,
        im_country_code,
        im_customer_contact,
        im_correlation_id,
        ingram_order_date_bt,
        quote_number,
        special_bid_number,
        end_user_contact,
        sorting_order,
        sort_by,
        page_size,
        page_number,
        vendor_name,
        quote_name,
        status,
        quote_create_date_bt,
        im_sender_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'ingramOrderDate-bt': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if ingram_order_date_bt is not None:
            
            _query_params.append(('ingramOrderDate-bt', ingram_order_date_bt))
            
        if quote_number is not None:
            
            _query_params.append(('quoteNumber', quote_number))
            
        if special_bid_number is not None:
            
            _query_params.append(('specialBidNumber', special_bid_number))
            
        if end_user_contact is not None:
            
            _query_params.append(('endUserContact', end_user_contact))
            
        if sorting_order is not None:
            
            _query_params.append(('sortingOrder', sorting_order))
            
        if sort_by is not None:
            
            _query_params.append(('sortBy', sort_by))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        if page_number is not None:
            
            _query_params.append(('pageNumber', page_number))
            
        if vendor_name is not None:
            
            _query_params.append(('vendorName', vendor_name))
            
        if quote_name is not None:
            
            _query_params.append(('quoteName', quote_name))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if quote_create_date_bt is not None:
            
            _query_params.append(('quoteCreateDate-bt', quote_create_date_bt))
            
        # process the header parameters
        if im_customer_number is not None:
            _header_params['IM-CustomerNumber'] = im_customer_number
        if im_country_code is not None:
            _header_params['IM-CountryCode'] = im_country_code
        if im_customer_contact is not None:
            _header_params['IM-CustomerContact'] = im_customer_contact
        if im_correlation_id is not None:
            _header_params['IM-CorrelationID'] = im_correlation_id
        if im_sender_id is not None:
            _header_params['IM-SenderID'] = im_sender_id
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v6/quotes/search',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_reseller_v6_validate_quote(
        self,
        quote_number: Annotated[StrictStr, Field(description="A unique identifier generated by Ingram Micro's CRM specific to each quote.")],
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your Ingram Micro unique customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction accross all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique identifier used to identify the third party source accessing the services.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ValidateQuoteResponse:
        """Validate Quote

        The validate quote helps the customer validate the quote created in Ingram Micro's system. Apart from validating the quote, the endpoint also identifies all the mandatory fields that are required by the vendor at the header and line levels.

        :param quote_number: A unique identifier generated by Ingram Micro's CRM specific to each quote. (required)
        :type quote_number: str
        :param im_customer_number: Your Ingram Micro unique customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction accross all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique identifier used to identify the third party source accessing the services.
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_reseller_v6_validate_quote_serialize(
            quote_number=quote_number,
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateQuoteResponse",
            '400': "GetResellerV6ValidateQuote400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_reseller_v6_validate_quote_with_http_info(
        self,
        quote_number: Annotated[StrictStr, Field(description="A unique identifier generated by Ingram Micro's CRM specific to each quote.")],
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your Ingram Micro unique customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction accross all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique identifier used to identify the third party source accessing the services.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ValidateQuoteResponse]:
        """Validate Quote

        The validate quote helps the customer validate the quote created in Ingram Micro's system. Apart from validating the quote, the endpoint also identifies all the mandatory fields that are required by the vendor at the header and line levels.

        :param quote_number: A unique identifier generated by Ingram Micro's CRM specific to each quote. (required)
        :type quote_number: str
        :param im_customer_number: Your Ingram Micro unique customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction accross all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique identifier used to identify the third party source accessing the services.
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_reseller_v6_validate_quote_serialize(
            quote_number=quote_number,
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateQuoteResponse",
            '400': "GetResellerV6ValidateQuote400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_reseller_v6_validate_quote_without_preload_content(
        self,
        quote_number: Annotated[StrictStr, Field(description="A unique identifier generated by Ingram Micro's CRM specific to each quote.")],
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your Ingram Micro unique customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction accross all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique identifier used to identify the third party source accessing the services.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Validate Quote

        The validate quote helps the customer validate the quote created in Ingram Micro's system. Apart from validating the quote, the endpoint also identifies all the mandatory fields that are required by the vendor at the header and line levels.

        :param quote_number: A unique identifier generated by Ingram Micro's CRM specific to each quote. (required)
        :type quote_number: str
        :param im_customer_number: Your Ingram Micro unique customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction accross all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique identifier used to identify the third party source accessing the services.
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_reseller_v6_validate_quote_serialize(
            quote_number=quote_number,
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateQuoteResponse",
            '400': "GetResellerV6ValidateQuote400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_reseller_v6_validate_quote_serialize(
        self,
        quote_number,
        im_customer_number,
        im_country_code,
        im_correlation_id,
        im_sender_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if quote_number is not None:
            
            _query_params.append(('quoteNumber', quote_number))
            
        # process the header parameters
        if im_customer_number is not None:
            _header_params['IM-CustomerNumber'] = im_customer_number
        if im_country_code is not None:
            _header_params['IM-CountryCode'] = im_country_code
        if im_sender_id is not None:
            _header_params['IM-SenderID'] = im_sender_id
        if im_correlation_id is not None:
            _header_params['IM-CorrelationID'] = im_correlation_id
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v6/q2o/validatequote',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_resellers_v6_quotes(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your Ingram Micro unique customer number")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction accross all the systems.")],
        quote_number: Annotated[StrictStr, Field(description="Unique identifier generated by Ingram Micro's CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique identifier used to identify the third party source accessing the services.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> QuoteDetailsResponse:
        """Get Quote Details

        The quote details API provides all quote details associated with the quote number provided.  The **“quoteNumber”**, **“isoCountryCode”** and **“customerNumber”** parameters are required. 

        :param im_customer_number: Your Ingram Micro unique customer number (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction accross all the systems. (required)
        :type im_correlation_id: str
        :param quote_number: Unique identifier generated by Ingram Micro's CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes. (required)
        :type quote_number: str
        :param im_sender_id: Unique identifier used to identify the third party source accessing the services.
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_quotes_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            quote_number=quote_number,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "QuoteDetailsResponse",
            '400': "ErrorResponse",
            '500': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_resellers_v6_quotes_with_http_info(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your Ingram Micro unique customer number")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction accross all the systems.")],
        quote_number: Annotated[StrictStr, Field(description="Unique identifier generated by Ingram Micro's CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique identifier used to identify the third party source accessing the services.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[QuoteDetailsResponse]:
        """Get Quote Details

        The quote details API provides all quote details associated with the quote number provided.  The **“quoteNumber”**, **“isoCountryCode”** and **“customerNumber”** parameters are required. 

        :param im_customer_number: Your Ingram Micro unique customer number (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction accross all the systems. (required)
        :type im_correlation_id: str
        :param quote_number: Unique identifier generated by Ingram Micro's CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes. (required)
        :type quote_number: str
        :param im_sender_id: Unique identifier used to identify the third party source accessing the services.
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_quotes_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            quote_number=quote_number,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "QuoteDetailsResponse",
            '400': "ErrorResponse",
            '500': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_resellers_v6_quotes_without_preload_content(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your Ingram Micro unique customer number")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction accross all the systems.")],
        quote_number: Annotated[StrictStr, Field(description="Unique identifier generated by Ingram Micro's CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique identifier used to identify the third party source accessing the services.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Quote Details

        The quote details API provides all quote details associated with the quote number provided.  The **“quoteNumber”**, **“isoCountryCode”** and **“customerNumber”** parameters are required. 

        :param im_customer_number: Your Ingram Micro unique customer number (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction accross all the systems. (required)
        :type im_correlation_id: str
        :param quote_number: Unique identifier generated by Ingram Micro's CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes. (required)
        :type quote_number: str
        :param im_sender_id: Unique identifier used to identify the third party source accessing the services.
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_quotes_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            quote_number=quote_number,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "QuoteDetailsResponse",
            '400': "ErrorResponse",
            '500': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_resellers_v6_quotes_serialize(
        self,
        im_customer_number,
        im_country_code,
        im_correlation_id,
        quote_number,
        im_sender_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if quote_number is not None:
            _path_params['quoteNumber'] = quote_number
        # process the query parameters
        # process the header parameters
        if im_customer_number is not None:
            _header_params['IM-CustomerNumber'] = im_customer_number
        if im_country_code is not None:
            _header_params['IM-CountryCode'] = im_country_code
        if im_sender_id is not None:
            _header_params['IM-SenderID'] = im_sender_id
        if im_correlation_id is not None:
            _header_params['IM-CorrelationID'] = im_correlation_id
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v6/quotes/{quoteNumber}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


