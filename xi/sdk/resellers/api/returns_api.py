# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from xi.sdk.resellers.models.returns_create_request import ReturnsCreateRequest
from xi.sdk.resellers.models.returns_create_response import ReturnsCreateResponse
from xi.sdk.resellers.models.returns_details_response import ReturnsDetailsResponse
from xi.sdk.resellers.models.returns_search_response import ReturnsSearchResponse

from xi.sdk.resellers.api_client import ApiClient, RequestSerialized
from xi.sdk.resellers.api_response import ApiResponse
from xi.sdk.resellers.rest import RESTResponseType


class ReturnsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_resellers_v6_returnsdetails(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        case_request_number: Annotated[StrictStr, Field(description="A unique return request number.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ReturnsDetailsResponse:
        """Returns Details

        The Returns Details API will retrieve all the details related to the specific caseRequestNumber.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param case_request_number: A unique return request number. (required)
        :type case_request_number: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_returnsdetails_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            case_request_number=case_request_number,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsDetailsResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_resellers_v6_returnsdetails_with_http_info(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        case_request_number: Annotated[StrictStr, Field(description="A unique return request number.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ReturnsDetailsResponse]:
        """Returns Details

        The Returns Details API will retrieve all the details related to the specific caseRequestNumber.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param case_request_number: A unique return request number. (required)
        :type case_request_number: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_returnsdetails_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            case_request_number=case_request_number,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsDetailsResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_resellers_v6_returnsdetails_without_preload_content(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        case_request_number: Annotated[StrictStr, Field(description="A unique return request number.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns Details

        The Returns Details API will retrieve all the details related to the specific caseRequestNumber.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param case_request_number: A unique return request number. (required)
        :type case_request_number: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_returnsdetails_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            case_request_number=case_request_number,
            im_sender_id=im_sender_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsDetailsResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_resellers_v6_returnsdetails_serialize(
        self,
        im_customer_number,
        im_country_code,
        im_correlation_id,
        case_request_number,
        im_sender_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if case_request_number is not None:
            _path_params['caseRequestNumber'] = case_request_number
        # process the query parameters
        # process the header parameters
        if im_customer_number is not None:
            _header_params['IM-CustomerNumber'] = im_customer_number
        if im_country_code is not None:
            _header_params['IM-CountryCode'] = im_country_code
        if im_correlation_id is not None:
            _header_params['IM-CorrelationID'] = im_correlation_id
        if im_sender_id is not None:
            _header_params['IM-SenderID'] = im_sender_id
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v6/returns/{caseRequestNumber}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_resellers_v6_returnssearch(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        case_request_number: Annotated[Optional[StrictStr], Field(description="A unique return request number.")] = None,
        invoice_number: Annotated[Optional[StrictStr], Field(description="The Invoice number for the order.")] = None,
        return_claim_id: Annotated[Optional[StrictStr], Field(description="A unique return claim Id.")] = None,
        reference_number: Annotated[Optional[StrictStr], Field(description="The reference number for the return.")] = None,
        ingram_part_number: Annotated[Optional[StrictStr], Field(description="Unique IngramMicro part number.")] = None,
        vendor_part_number: Annotated[Optional[StrictStr], Field(description="The vendor's part number.")] = None,
        return_status_in: Annotated[Optional[StrictStr], Field(description="Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.")] = None,
        claim_status_in: Annotated[Optional[StrictStr], Field(description="Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.")] = None,
        created_on_bt: Annotated[Optional[StrictStr], Field(description="The date on which the return request was created. ")] = None,
        modified_on_bt: Annotated[Optional[StrictStr], Field(description="The date on which the return request was last updated.")] = None,
        return_reason_in: Annotated[Optional[StrictStr], Field(description="Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax")] = None,
        page: Annotated[Optional[StrictStr], Field(description="Number of page.")] = None,
        size: Annotated[Optional[StrictStr], Field(description="The submitted pagesize, default is 25")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Refers to the column selected to apply the sorting criteria.")] = None,
        sorting_column_name: Annotated[Optional[StrictStr], Field(description="The column name which will be sorted on.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ReturnsSearchResponse:
        """Returns Search

        The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param case_request_number: A unique return request number.
        :type case_request_number: str
        :param invoice_number: The Invoice number for the order.
        :type invoice_number: str
        :param return_claim_id: A unique return claim Id.
        :type return_claim_id: str
        :param reference_number: The reference number for the return.
        :type reference_number: str
        :param ingram_part_number: Unique IngramMicro part number.
        :type ingram_part_number: str
        :param vendor_part_number: The vendor's part number.
        :type vendor_part_number: str
        :param return_status_in: Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.
        :type return_status_in: str
        :param claim_status_in: Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.
        :type claim_status_in: str
        :param created_on_bt: The date on which the return request was created. 
        :type created_on_bt: str
        :param modified_on_bt: The date on which the return request was last updated.
        :type modified_on_bt: str
        :param return_reason_in: Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax
        :type return_reason_in: str
        :param page: Number of page.
        :type page: str
        :param size: The submitted pagesize, default is 25
        :type size: str
        :param sort: Refers to the column selected to apply the sorting criteria.
        :type sort: str
        :param sorting_column_name: The column name which will be sorted on.
        :type sorting_column_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_returnssearch_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            case_request_number=case_request_number,
            invoice_number=invoice_number,
            return_claim_id=return_claim_id,
            reference_number=reference_number,
            ingram_part_number=ingram_part_number,
            vendor_part_number=vendor_part_number,
            return_status_in=return_status_in,
            claim_status_in=claim_status_in,
            created_on_bt=created_on_bt,
            modified_on_bt=modified_on_bt,
            return_reason_in=return_reason_in,
            page=page,
            size=size,
            sort=sort,
            sorting_column_name=sorting_column_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsSearchResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_resellers_v6_returnssearch_with_http_info(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        case_request_number: Annotated[Optional[StrictStr], Field(description="A unique return request number.")] = None,
        invoice_number: Annotated[Optional[StrictStr], Field(description="The Invoice number for the order.")] = None,
        return_claim_id: Annotated[Optional[StrictStr], Field(description="A unique return claim Id.")] = None,
        reference_number: Annotated[Optional[StrictStr], Field(description="The reference number for the return.")] = None,
        ingram_part_number: Annotated[Optional[StrictStr], Field(description="Unique IngramMicro part number.")] = None,
        vendor_part_number: Annotated[Optional[StrictStr], Field(description="The vendor's part number.")] = None,
        return_status_in: Annotated[Optional[StrictStr], Field(description="Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.")] = None,
        claim_status_in: Annotated[Optional[StrictStr], Field(description="Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.")] = None,
        created_on_bt: Annotated[Optional[StrictStr], Field(description="The date on which the return request was created. ")] = None,
        modified_on_bt: Annotated[Optional[StrictStr], Field(description="The date on which the return request was last updated.")] = None,
        return_reason_in: Annotated[Optional[StrictStr], Field(description="Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax")] = None,
        page: Annotated[Optional[StrictStr], Field(description="Number of page.")] = None,
        size: Annotated[Optional[StrictStr], Field(description="The submitted pagesize, default is 25")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Refers to the column selected to apply the sorting criteria.")] = None,
        sorting_column_name: Annotated[Optional[StrictStr], Field(description="The column name which will be sorted on.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ReturnsSearchResponse]:
        """Returns Search

        The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param case_request_number: A unique return request number.
        :type case_request_number: str
        :param invoice_number: The Invoice number for the order.
        :type invoice_number: str
        :param return_claim_id: A unique return claim Id.
        :type return_claim_id: str
        :param reference_number: The reference number for the return.
        :type reference_number: str
        :param ingram_part_number: Unique IngramMicro part number.
        :type ingram_part_number: str
        :param vendor_part_number: The vendor's part number.
        :type vendor_part_number: str
        :param return_status_in: Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.
        :type return_status_in: str
        :param claim_status_in: Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.
        :type claim_status_in: str
        :param created_on_bt: The date on which the return request was created. 
        :type created_on_bt: str
        :param modified_on_bt: The date on which the return request was last updated.
        :type modified_on_bt: str
        :param return_reason_in: Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax
        :type return_reason_in: str
        :param page: Number of page.
        :type page: str
        :param size: The submitted pagesize, default is 25
        :type size: str
        :param sort: Refers to the column selected to apply the sorting criteria.
        :type sort: str
        :param sorting_column_name: The column name which will be sorted on.
        :type sorting_column_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_returnssearch_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            case_request_number=case_request_number,
            invoice_number=invoice_number,
            return_claim_id=return_claim_id,
            reference_number=reference_number,
            ingram_part_number=ingram_part_number,
            vendor_part_number=vendor_part_number,
            return_status_in=return_status_in,
            claim_status_in=claim_status_in,
            created_on_bt=created_on_bt,
            modified_on_bt=modified_on_bt,
            return_reason_in=return_reason_in,
            page=page,
            size=size,
            sort=sort,
            sorting_column_name=sorting_column_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsSearchResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_resellers_v6_returnssearch_without_preload_content(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        case_request_number: Annotated[Optional[StrictStr], Field(description="A unique return request number.")] = None,
        invoice_number: Annotated[Optional[StrictStr], Field(description="The Invoice number for the order.")] = None,
        return_claim_id: Annotated[Optional[StrictStr], Field(description="A unique return claim Id.")] = None,
        reference_number: Annotated[Optional[StrictStr], Field(description="The reference number for the return.")] = None,
        ingram_part_number: Annotated[Optional[StrictStr], Field(description="Unique IngramMicro part number.")] = None,
        vendor_part_number: Annotated[Optional[StrictStr], Field(description="The vendor's part number.")] = None,
        return_status_in: Annotated[Optional[StrictStr], Field(description="Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.")] = None,
        claim_status_in: Annotated[Optional[StrictStr], Field(description="Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.")] = None,
        created_on_bt: Annotated[Optional[StrictStr], Field(description="The date on which the return request was created. ")] = None,
        modified_on_bt: Annotated[Optional[StrictStr], Field(description="The date on which the return request was last updated.")] = None,
        return_reason_in: Annotated[Optional[StrictStr], Field(description="Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax")] = None,
        page: Annotated[Optional[StrictStr], Field(description="Number of page.")] = None,
        size: Annotated[Optional[StrictStr], Field(description="The submitted pagesize, default is 25")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Refers to the column selected to apply the sorting criteria.")] = None,
        sorting_column_name: Annotated[Optional[StrictStr], Field(description="The column name which will be sorted on.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns Search

        The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param case_request_number: A unique return request number.
        :type case_request_number: str
        :param invoice_number: The Invoice number for the order.
        :type invoice_number: str
        :param return_claim_id: A unique return claim Id.
        :type return_claim_id: str
        :param reference_number: The reference number for the return.
        :type reference_number: str
        :param ingram_part_number: Unique IngramMicro part number.
        :type ingram_part_number: str
        :param vendor_part_number: The vendor's part number.
        :type vendor_part_number: str
        :param return_status_in: Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.
        :type return_status_in: str
        :param claim_status_in: Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided.
        :type claim_status_in: str
        :param created_on_bt: The date on which the return request was created. 
        :type created_on_bt: str
        :param modified_on_bt: The date on which the return request was last updated.
        :type modified_on_bt: str
        :param return_reason_in: Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax
        :type return_reason_in: str
        :param page: Number of page.
        :type page: str
        :param size: The submitted pagesize, default is 25
        :type size: str
        :param sort: Refers to the column selected to apply the sorting criteria.
        :type sort: str
        :param sorting_column_name: The column name which will be sorted on.
        :type sorting_column_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_resellers_v6_returnssearch_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            case_request_number=case_request_number,
            invoice_number=invoice_number,
            return_claim_id=return_claim_id,
            reference_number=reference_number,
            ingram_part_number=ingram_part_number,
            vendor_part_number=vendor_part_number,
            return_status_in=return_status_in,
            claim_status_in=claim_status_in,
            created_on_bt=created_on_bt,
            modified_on_bt=modified_on_bt,
            return_reason_in=return_reason_in,
            page=page,
            size=size,
            sort=sort,
            sorting_column_name=sorting_column_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsSearchResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_resellers_v6_returnssearch_serialize(
        self,
        im_customer_number,
        im_country_code,
        im_correlation_id,
        im_sender_id,
        case_request_number,
        invoice_number,
        return_claim_id,
        reference_number,
        ingram_part_number,
        vendor_part_number,
        return_status_in,
        claim_status_in,
        created_on_bt,
        modified_on_bt,
        return_reason_in,
        page,
        size,
        sort,
        sorting_column_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if case_request_number is not None:
            
            _query_params.append(('caseRequestNumber', case_request_number))
            
        if invoice_number is not None:
            
            _query_params.append(('invoiceNumber', invoice_number))
            
        if return_claim_id is not None:
            
            _query_params.append(('returnClaimId', return_claim_id))
            
        if reference_number is not None:
            
            _query_params.append(('referenceNumber', reference_number))
            
        if ingram_part_number is not None:
            
            _query_params.append(('ingramPartNumber', ingram_part_number))
            
        if vendor_part_number is not None:
            
            _query_params.append(('vendorPartNumber', vendor_part_number))
            
        if return_status_in is not None:
            
            _query_params.append(('returnStatus-in', return_status_in))
            
        if claim_status_in is not None:
            
            _query_params.append(('claimStatus-in', claim_status_in))
            
        if created_on_bt is not None:
            
            _query_params.append(('createdOn-bt', created_on_bt))
            
        if modified_on_bt is not None:
            
            _query_params.append(('modifiedOn-bt', modified_on_bt))
            
        if return_reason_in is not None:
            
            _query_params.append(('returnReason-in', return_reason_in))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if size is not None:
            
            _query_params.append(('size', size))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if sorting_column_name is not None:
            
            _query_params.append(('sortingColumnName', sorting_column_name))
            
        # process the header parameters
        if im_customer_number is not None:
            _header_params['IM-CustomerNumber'] = im_customer_number
        if im_country_code is not None:
            _header_params['IM-CountryCode'] = im_country_code
        if im_correlation_id is not None:
            _header_params['IM-CorrelationID'] = im_correlation_id
        if im_sender_id is not None:
            _header_params['IM-SenderID'] = im_sender_id
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/resellers/v6/returns/search',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def post_returnscreate(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        returns_create_request: Optional[ReturnsCreateRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ReturnsCreateResponse:
        """Returns Create

        Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param returns_create_request:
        :type returns_create_request: ReturnsCreateRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_returnscreate_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            returns_create_request=returns_create_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsCreateResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def post_returnscreate_with_http_info(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        returns_create_request: Optional[ReturnsCreateRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ReturnsCreateResponse]:
        """Returns Create

        Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param returns_create_request:
        :type returns_create_request: ReturnsCreateRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_returnscreate_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            returns_create_request=returns_create_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsCreateResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def post_returnscreate_without_preload_content(
        self,
        im_customer_number: Annotated[str, Field(strict=True, max_length=10, description="Your unique Ingram Micro customer number.")],
        im_country_code: Annotated[str, Field(min_length=2, strict=True, max_length=2, description="Two-character ISO country code.")],
        im_correlation_id: Annotated[str, Field(strict=True, max_length=32, description="Unique transaction number to identify each transaction across all the systems.")],
        im_sender_id: Annotated[Optional[Annotated[str, Field(strict=True, max_length=32)]], Field(description="Unique value used to identify the sender of the transaction. Example: MyCompany")] = None,
        returns_create_request: Optional[ReturnsCreateRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns Create

        Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 

        :param im_customer_number: Your unique Ingram Micro customer number. (required)
        :type im_customer_number: str
        :param im_country_code: Two-character ISO country code. (required)
        :type im_country_code: str
        :param im_correlation_id: Unique transaction number to identify each transaction across all the systems. (required)
        :type im_correlation_id: str
        :param im_sender_id: Unique value used to identify the sender of the transaction. Example: MyCompany
        :type im_sender_id: str
        :param returns_create_request:
        :type returns_create_request: ReturnsCreateRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._post_returnscreate_serialize(
            im_customer_number=im_customer_number,
            im_country_code=im_country_code,
            im_correlation_id=im_correlation_id,
            im_sender_id=im_sender_id,
            returns_create_request=returns_create_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ReturnsCreateResponse",
            '400': "PostRenewalssearch400Response",
            '500': "PostCreateorderV7500Response",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _post_returnscreate_serialize(
        self,
        im_customer_number,
        im_country_code,
        im_correlation_id,
        im_sender_id,
        returns_create_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if im_customer_number is not None:
            _header_params['IM-CustomerNumber'] = im_customer_number
        if im_country_code is not None:
            _header_params['IM-CountryCode'] = im_country_code
        if im_correlation_id is not None:
            _header_params['IM-CorrelationID'] = im_correlation_id
        if im_sender_id is not None:
            _header_params['IM-SenderID'] = im_sender_id
        # process the form parameters
        # process the body parameter
        if returns_create_request is not None:
            _body_params = returns_create_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'application'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/resellers/v6/returns/create',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


