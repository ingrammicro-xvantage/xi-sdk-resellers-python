# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from xi.sdk.resellers.models.price_and_availability_response_inner_subscription_price_inner_options_inner import PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner

class TestPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner(unittest.TestCase):
    """PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner:
        """Test PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner`
        """
        model = PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner()
        if include_optional:
            return PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner(
                resource_id = '',
                resource_uid = '',
                resource_name = '',
                vendor_part_number = '',
                min_units = 1.337,
                max_units = 1.337,
                recurringpricemodel = '',
                unit_of_measure = '',
                resource_pricing = [
                    xi.sdk.resellers.models.price_and_availability_response_inner_subscription_price_inner_options_inner_resource_pricing_inner.PriceAndAvailabilityResponse_inner_subscriptionPrice_inner_options_inner_resourcePricing_inner(
                        name = '', 
                        quantity = '', 
                        msrp = 1.337, 
                        unit_price = 1.337, 
                        margin = 1.337, 
                        currency_code = '', 
                        subscription_period = '', )
                    ],
                discounts = [
                    xi.sdk.resellers.models.price_and_availability_response_inner_subscription_price_inner_options_inner_discounts_inner.PriceAndAvailabilityResponse_inner_subscriptionPrice_inner_options_inner_discounts_inner(
                        volume_discounts = [
                            xi.sdk.resellers.models.price_and_availability_response_inner_subscription_price_inner_options_inner_discounts_inner_volume_discounts_inner.PriceAndAvailabilityResponse_inner_subscriptionPrice_inner_options_inner_discounts_inner_volumeDiscounts_inner(
                                currency_code = '', 
                                quantity = '', 
                                msrp = 1.337, 
                                unit_price = 1.337, 
                                margin = 1.337, )
                            ], 
                        special_pricing = [
                            xi.sdk.resellers.models.price_and_availability_response_inner_subscription_price_inner_options_inner_discounts_inner_special_pricing_inner.PriceAndAvailabilityResponse_inner_subscriptionPrice_inner_options_inner_discounts_inner_specialPricing_inner(
                                currency_code = '', 
                                discount = 1.337, 
                                discount_type = '', 
                                discount_qty_limit = 56, 
                                discount_expiry_date = '', 
                                vendor_program_name = '', )
                            ], )
                    ],
                fees = [
                    xi.sdk.resellers.models.price_and_availability_response_inner_subscription_price_inner_options_inner_fees_inner.PriceAndAvailabilityResponse_inner_subscriptionPrice_inner_options_inner_fees_inner(
                        price = 1.337, 
                        type = '', 
                        msrp = 1.337, 
                        code = '', )
                    ]
            )
        else:
            return PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner(
        )
        """

    def testPriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner(self):
        """Test PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
