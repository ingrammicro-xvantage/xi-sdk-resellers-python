# coding: utf-8

"""
    XI Sdk Resellers

    For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from xi.sdk.resellers.models.get_reseller_v6_validate_quote400_response import GetResellerV6ValidateQuote400Response

class TestGetResellerV6ValidateQuote400Response(unittest.TestCase):
    """GetResellerV6ValidateQuote400Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetResellerV6ValidateQuote400Response:
        """Test GetResellerV6ValidateQuote400Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetResellerV6ValidateQuote400Response`
        """
        model = GetResellerV6ValidateQuote400Response()
        if include_optional:
            return GetResellerV6ValidateQuote400Response(
                traceid = '',
                type = '',
                message = '',
                fields = [
                    xi.sdk.resellers.models.get_reseller_v6_validate_quote_400_response_fields_inner.get_reseller_v6_validateQuote_400_response_fields_inner(
                        field = '', 
                        message = '', 
                        value = '', )
                    ]
            )
        else:
            return GetResellerV6ValidateQuote400Response(
        )
        """

    def testGetResellerV6ValidateQuote400Response(self):
        """Test GetResellerV6ValidateQuote400Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
