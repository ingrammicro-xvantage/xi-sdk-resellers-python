name: Python SDK Deployment & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter the version to deploy/release'
        required: true
      publish_package:
        description: 'Set true to build and publish package to PyPI'
        required: false
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      deployed_version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version output
        id: set_version
        run: |
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

      - name: Deploy SDK (manual/record)
        run: |
          echo "Deployed version ${{ github.event.inputs.version }} successfully"

  publish-package:
    needs: deploy
    if: ${{ github.event.inputs.publish_package == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build --no-cache-dir

      - name: Update version in pyproject.toml
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  release-and-deployment:
    needs: [deploy, publish-package]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          name: "v${{ github.event.inputs.version }} Release"
          body: "Python SDK version ${{ github.event.inputs.version }} deployed successfully"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Deployment entry in GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/deployments \
            -d @- << EOF
          {
            "ref": "${GITHUB_SHA}",
            "environment": "production",
            "description": "Python SDK version v${{ github.event.inputs.version }} deployed successfully",
            "auto_merge": false,
            "required_contexts": []
          }
