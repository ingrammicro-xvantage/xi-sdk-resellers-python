name: Python SDK Deployment & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter the version to deploy/release'
        required: true
      deploy_only:
        description: 'Set true to skip building/publishing and only create deployment & release'
        required: false
        default: false
      publish_package:
        description: 'Set true to build and publish package to PyPI'
        required: false
        default: false

jobs:
  deploy-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version output
        id: set_version
        run: |
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

      - name: Optional Build & Publish Package
        if: ${{ github.event.inputs.publish_package == 'true' && github.event.inputs.deploy_only == 'false' }}
        run: |
          python -m pip install --upgrade pip
          pip install build --no-cache-dir twine
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml
          python -m build
          python -m twine upload dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}

      - name: Create Git tag for version
        run: |
          git tag -fa "v${{ github.event.inputs.version }}" -m "Tag for version ${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}" --force

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          name: "v${{ github.event.inputs.version }} Release"
          body: "Python SDK version ${{ github.event.inputs.version }} deployed successfully"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/deployments \
            -d @- << EOF
          {
            "ref": "v${{ github.event.inputs.version }}",
            "environment": "production",
            "description": "Python SDK version v${{ github.event.inputs.version }} deployed successfully",
            "auto_merge": false,
            "required_contexts": []
          }
